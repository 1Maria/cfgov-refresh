/* ==========================================================================
   cfgov-refresh
   layout
   ========================================================================== */

/* topdoc
  name: Base layout
  family: cfgov-layout
  patterns:
    - name: Wrapper class
      markup: |
        <div class="wrapper">
            Wrapper
        </div>
      notes:
        - "Turns an element into a cf-grid wrapper at 801px and above."
        - "Includes some explicit declarations for IE8 due to the fact that it doesn't support media queries."
  tags:
    - cfgov-layout
*/

.wrapper {
    .u-respond-to-min(801px, {
        .grid_wrapper();
    });
}

.lt-ie9 {
    & .wrapper {
        max-width: 960px;
    }

    & body {
        min-width: 800px;
    }
}


/* topdoc
  name: Content bar
  family: cfgov-layout
  patterns:
    - name: A 10 pixel bar that divides the header or hero from the main content
      markup: |
        <div class="content_bar"></div>
      notes:
        - "This is necessary because we don't have a predictable place to put a full-width border. It needs to be under the hero on pages with heroes, but under the header if there is no hero."
        - ".content_bar must come after .content_hero but before .content_wrapper"
  tags:
    - cfgov-layout
*/

.content_bar {
    height: 10px;
    background: @green;
}


/* topdoc
  name: Main content and sidebar
  family: cfgov-layout
  patterns:
    - name: Standard layout for the main content area and sidebar
      markup: |
        <main class="content" id="main" role="main">
            <section class="content_hero" style="background: #E3E4E5">
                Content hero
            </section>
            <div class="content_bar"></div>
            <div class="wrapper content_wrapper">
                <section class="content_main">
                    Main content area
                </section><!-- END .content_main -->
                <aside class="content_sidebar" style="background: #F1F2F2">
                    Sidebar
                </aside><!-- END .content_sidebar -->
            </div><!-- END .content_wrapper -->
        </main><!-- END .content -->
      codenotes:
        - |
          Structural cheat sheet:
          -----------------------
          main.content
            .content_hero
            .content_bar
            .content_wrapper
              .content_main
              .content_sidebar
      notes:
        - "By default .content_main and .content_sidebar stack vertically. When using the modifiers described below to create columns, the columns will remain stacked for smaller screens and then convert to to columns at 801px."
        - ".content_bar must come after .content_hero (if it exists) but before .content_wrapper."
        - "Inline styling is for demonstration purposes only; do not include it in your markup."
    - name: Left-hand navigation layout
      markup: |
        <main class="content content__1-3" id="main" role="main">
            <section class="content_hero" style="background: #E3E4E5">
                Content hero
            </section>
            <div class="content_bar"></div>
            <div class="wrapper content_wrapper">
                <section class="content_main">
                    <h2>Main content area</h2>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                        Cum corrupti tempora nam nihil qui mollitia consectetur
                        corporis nemo culpa dolorum! Laborum at eos deleniti
                        consequatur itaque officiis debitis quisquam! Provident!
                    </p>
                </section><!-- END .content_main -->
                <aside class="content_sidebar" style="background: #F1F2F2">
                    Section navigation
                </aside><!-- END .content_sidebar -->
            </div><!-- END .content_wrapper -->
        </main><!-- END .content -->
      codenotes:
        - .content__1-3
      notes:
        - "Add a class of .content__L-R to main.content to determine the width ratio of .content_main and .content_sidebar, where 'L' is the left-hand item and 'R' is the right-hand item. The two common configurations are 1-3 (sidebar on the left, content on the right, in a ratio of 1:3) and 2-1 (content on the left, sidebar on the right, in a ratio of 2:1). It is assumed that the content is wider than the sidebar."
        - "Inline styling is for demonstration purposes only; do not include it in your markup."
    - name: Right-hand sidebar layout
      markup: |
        <main class="content content__2-1" id="main" role="main">
            <section class="content_hero" style="background: #E3E4E5">
                Content hero
            </section>
            <div class="content_bar"></div>
            <div class="wrapper content_wrapper">
                <section class="content_main">
                    <h2>Main content area</h2>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                        Cum corrupti tempora nam nihil qui mollitia consectetur
                        corporis nemo culpa dolorum! Laborum at eos deleniti
                        consequatur itaque officiis debitis quisquam! Provident!
                    </p>
                </section><!-- END .content_main -->
                <aside class="content_sidebar" style="background: #F1F2F2">
                    Section navigation
                </aside><!-- END .content_sidebar -->
            </div><!-- END .content_wrapper -->
        </main><!-- END .content -->
      codenotes:
        - .content__2-1
      notes:
        - "Add a class of .content__L-R to main.content to determine the width ratio of .content_main and .content_sidebar, where 'L' is the left-hand item and 'R' is the right-hand item. The two common configurations are 1-3 (sidebar on the left, content on the right, in a ratio of 1:3) and 2-1 (content on the left, sidebar on the right, in a ratio of 2:1). It is assumed that the content is wider than the sidebar."
        - "Inline styling is for demonstration purposes only; do not include it in your markup."
    - name: Narrow content column option
      markup: |
        <main class="content content__2-1" id="main" role="main">
            <section class="content_hero" style="background: #E3E4E5">
                Content hero
            </section>
            <div class="content_bar"></div>
            <div class="wrapper content_wrapper">
                <section class="content_main content_main__narrow">
                    <h2>Main content area</h2>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                        Cum corrupti tempora nam nihil qui mollitia consectetur
                        corporis nemo culpa dolorum! Laborum at eos deleniti
                        consequatur itaque officiis debitis quisquam! Provident!
                    </p>
                </section><!-- END .content_main -->
                <aside class="content_sidebar" style="background: #F1F2F2">
                    Section navigation
                </aside><!-- END .content_sidebar -->
            </div><!-- END .content_wrapper -->
        </main><!-- END .content -->
      codenotes:
        - .content_main__narrow
      notes:
        - "Add a class of .content_main__narrow to .content_main to get a one-column (in a 12-column grid) gutter on the right side."
        - "Inline styling is for demonstration purposes only; do not include it in your markup."
  tags:
    - cfgov-layout
*/

.content_main,
.content_sidebar {
    padding: unit(@grid_gutter-width / @base-font-size-px, em)
             unit((@grid_gutter-width / 2) / @base-font-size-px, em);

    .u-respond-to-min(600px, {
        .grid_column(12);
        padding: unit((@grid_gutter-width * 2) / @base-font-size-px, em)
                 unit((@grid_gutter-width / 2) / @base-font-size-px, em);
    });
}

// Set up standard multi-column content area layouts
.u-respond-to-min(801px, {
    .content {
        &__1-3 {
            .content_sidebar {
                .grid_column(3);

                padding-right: unit(@grid_gutter-width / @base-font-size-px, em);
            }
            .content_main {
                .grid_column(9);

                &:after {
                    left: unit(-1 * @grid_gutter-width / @base-font-size-px, em);
                }
            }
        }

        &__2-1 {
            .content_main {
                .grid_column(8);

                &:after {
                    right: unit(-1 * @grid_gutter-width / @base-font-size-px, em);
                }
            }
            .content_sidebar {
                .grid_column(4);

                padding-left: unit(@grid_gutter-width / @base-font-size-px, em);
            }
        }
    }

    .content_main,
    .content_sidebar {
        padding: unit((@grid_gutter-width * 2) / @base-font-size-px, em) 0;
    } 

    .content_main {
        position: relative;

        &:after {
            content: '';
            border-left: 1px solid @gray-50;
            position: absolute;
            top: unit((@grid_gutter-width * 2) / @base-font-size-px, em);
            bottom: unit((@grid_gutter-width * 2) / @base-font-size-px, em);
        }
    }
}); // END min-width 801 block

.u-respond-to-min(1024px, {
    .content {
        &__2-1 {
            .content_main__narrow {
                .grid_column(7, @grid_total-columns, 0, 1);
            }
        }
    }
});


/* topdoc
  name: Sidebar
  family: cfgov-layout
  patterns:
    - name: Sidebar item spacing
      markup: |
        <section class="content_sidebar-item related-posts" style="background: #F1F2F2">
            Related posts
        </section>
        <section class="content_sidebar-item related-news" style="background: #F1F2F2">
            Related news
        </section>
      notes:
        - "Gives some vertical margin between sidebar items."
        - "Inline styling is for demonstration purposes only; do not include it in your markup."
  tags:
    - cfgov-layout
*/

.content_sidebar-item + .content_sidebar-item {
    margin-top: unit(60px / @base-font-size-px, em);
}


/* topdoc
  name: Content footer
  family: cfgov-layout
  patterns:
    - name: Standard content footer example
      markup: |
        <section class="content_main">
            <h2>Main content area</h2>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                Cum corrupti tempora nam nihil qui mollitia consectetur
                corporis nemo culpa dolorum! Laborum at eos deleniti
                consequatur itaque officiis debitis quisquam! Provident!
            </p>
            <aside class="content_footer">
                Content footer
            </aside><!-- END .content_footer -->
        </section><!-- END .content_main -->
      codenotes:
        - .content_footer
      notes:
        - "The content footer is useful when you have sidebar-like content in a
           layout without a sidebar. For example when you have a side nav layout
           you can place sidebar content in the content_footer area."
    - name: Flush content footer example
      markup: |
        <main class="content content__1-3" id="main" role="main">
            <div class="content_bar"></div>
            <div class="wrapper content_wrapper">
                <section class="content_main">
                    <h2>Main content area</h2>
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                        Cum corrupti tempora nam nihil qui mollitia consectetur
                        corporis nemo culpa dolorum! Laborum at eos deleniti
                        consequatur itaque officiis debitis quisquam! Provident!
                    </p>
                    <aside class="content_footer content_footer__bg">
                        Content footer flush
                    </aside><!-- END .content_footer -->
                </section><!-- END .content_main -->
                <aside class="content_sidebar">
                    Section navigation
                </aside><!-- END .content_sidebar -->
            </div><!-- END .content_wrapper -->
        </main><!-- END .content -->
        <footer class="footer" role="contentinfo">
            <div class="wrapper">
                Footer
            </div>
        </footer><!-- END .footer -->
      codenotes:
        - .content_footer__bg
      notes:
        - "Adds a background with padding."
  tags:
    - cfgov-layout
*/

.content_footer {
    margin-top: unit((@grid_gutter-width * 2) / @base-font-size-px, em);

    &_item {
        & + & {
            margin-top: unit((@grid_gutter-width * 2) / @base-font-size-px, em);
        }
        .u-respond-to-min(801px, {
            .grid_column(6);
            & + & {
                margin-top: 0;
            }
        });
    }

    &__bg {
        padding: 2em @grid_gutter-width;
        margin-right: (@grid_gutter-width / 2) * -1;
        margin-bottom: unit((@grid_gutter-width * -1) / @base-font-size-px, em);
        margin-left: (@grid_gutter-width / 2) * -1;
        background: @gray-10;
        .u-respond-to-min(600px, {
            margin-right: @grid_gutter-width * -1;
            margin-bottom: unit(((@grid_gutter-width * 2) *-1) / @base-font-size-px, em);
            margin-left: @grid_gutter-width * -1;
        });
    }
}


/* topdoc
  name: Bleedbar sidebar styling
  family: cfgov-layout
  patterns:
    - name: Give the sidebar a background color that bleeds off the edge of the screen
      markup: |
        <main class="content content__2-1 content__bleedbar" id="main" role="main">
            <section class="content_hero" style="background: #E3E4E5">
                Content hero
            </section>
            <div class="content_bar"></div>
            <div class="wrapper content_wrapper">
                <section class="content_main">
                    Main content area
                </section><!-- END .content_main -->
                <aside class="content_sidebar">
                    Bleeding sidebar
                </aside><!-- END .content_sidebar -->
            </div><!-- END .content_wrapper -->
        </main><!-- END .content -->
      notes:
        - "Simply add class .content__bleedbar to main.content."
        - "Only supports sidebars on the right, for now."
        - "Inline styling is for demonstration purposes only; do not include it in your markup."
  tags:
    - cfgov-layout
*/

.content__bleedbar {

    // Overrides the border between main and sidebar, because bleedbar makes its own.
    .content_main:after {
        content: none;
    }

    .content_sidebar {
        padding: 2em unit((@grid_gutter-width / 2) / @base-font-size-px, em);
        background: @gray-10;
    }

    .u-respond-to-min(801px, {

        // Prevent pseudo element background from creating horizontal scrollbar.
        overflow: hidden;

        .content_sidebar {
            padding: unit((@grid_gutter-width * 2) / @base-font-size-px, em)
                     0
                     unit((@grid_gutter-width / 2) / @base-font-size-px, em)
                     unit(@grid_gutter-width / @base-font-size-px, em);
            margin-left: 0;
            position: relative;
            z-index: 1;

            // Remove background color from actual sidebar.
            // It will now be provided by pseudoelement :after sidebar parent.
            background: transparent;

            .lt-ie8 & {
                // Make sure the sidebar still has a background in IE7.
                padding-right: @grid_gutter-width;
                background: @gray-10;
            }
        }

        .content_wrapper:after {
            // Create faux sidebar background.
            content: '';
            display: block;
            width: 9999px;
            border-left: 1px solid @gray-50;
            height: 100%;
            position: absolute;
            top: 0;
            z-index: 0;
            // The three in the below calculation is a magic number.
            // Not entirely sure what to do about it right now.
            margin-left: (@grid_gutter-width / 3);
            background: @gray-10;
        }

        &.content__2-1 .content_wrapper:after {
            left: 66.666666667%;    
        }
        &.content__3-1 .content_wrapper:after {
            left: 75%;
        }

    }); // END min-width 801 block

} // END .content__bleedbar


/* topdoc
  name: Footer
  family: cfgov-layout
  patterns:
    - name: Standard footer styling
      markup: |
        <footer class="footer" role="contentinfo">
            <div class="wrapper">
                Footer
            </div>
        </footer><!-- END .footer -->
  tags:
    - cfgov-layout
*/

.footer {
    padding: 1.5em 0;
    border-top: 3px solid @green;
    background: @gray-10;
}


/* topdoc
    name: EOF
    eof: true
*/

.header .demo-placeholder,
.content_hero .demo-placeholder,
.footer .demo-placeholder {
    // Temporary styling to bring in line with main columns.
    margin-left: (@grid_gutter-width / 2);

    .u-respond-to-range(600px, 800px, {
        margin-left: @grid_gutter-width;
    });
}
