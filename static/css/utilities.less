/* ==========================================================================
   cfgov-refresh
   utilities
   ========================================================================== */


/* topdoc
  name: Flexible proportional containers
  family: cfgov-utilities
  notes:
    - "Utilizes intrinsic ratios to create a flexible container that retains its
      aspect ratio. When image tags scale they retain their aspect ratio, but if
      you need a flexible video you will need to use this mixin."
    - "You can read more about intrinsic rations here:
      http://alistapart.com/article/creating-intrinsic-ratios-for-video"
  patterns:
    - name: Default example
      markup: |
        <div class="u-flexible-container">
            <video
              class="u-flexible-container_inner"
              style="background:#75787B;"
              controls>
            </video>
        </div>
      notes:
        - "Defaults to a 16:19 ratio."
        - "Original mixin credit: https://gist.github.com/craigmdennis/6655047"
        - "Note that inline style usage is being used for demo purposes only.
          Please do not use inline styles."
      codenotes:
        - |
          Structural sheat sheet:
          -----------------------
          .u-flexible-container
            .u-flexible-container_inner
    - name: Background image examples
      markup: |
        <div class="u-flexible-container"
             style="
               background-image:url(http://placekitten.com/700/394);
               background-position: center center;
             ">
        </div>
        <div class="u-flexible-container"
             style="
               background-image:url(http://placekitten.com/700/394);
               background-position: center center;
               background-size: cover;
             ">
        </div>
      codenotes:
        - |
          Structural sheat sheet:
          -----------------------
          .u-flexible-container
      notes:
        - "If you're not using the video or object elements and all you need is
          a proportionally cropped or scaling background image with a fluid
          container then you can leave out u-flexible-container_inner."
        - "Note that inline style usage is being used for demo purposes only.
          Please do not use inline styles."
    - name: 4-3 modifier
      markup: |
        <div class="u-flexible-container u-flexible-container__4-3">
            <video
              class="u-flexible-container_inner"
              style="background:#75787B;"
              controls>
            </video>
        </div>
      codenotes:
        - |
          Structural sheat sheet:
          -----------------------
          .u-flexible-container.u-flexible-container__4-3
            .u-flexible-container_inner
      notes:
        - "Create your own aspect ratios by using this modifier as an example."
        - "Note that inline style usage is being used for demo purposes only.
          Please do not use inline styles."
  tags:
    - cfgov-utilities
*/

.u-flexible-container(@width: 16, @height: 9) {
    @ratio: (@height / @width) * 100;
 
    position: relative;
    padding-bottom: ~"@{ratio}%";
    height: 0;
}

.u-flexible-container {
    .u-flexible-container();
}

.u-flexible-container_inner {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.u-flexible-container__4-3 {
    .u-flexible-container(4,3);
}


/* topdoc
  name: Utility classes
  family: cfgov-utilities
  patterns:
    - name: Visually hidden
      markup: |
        <h1>
            <a href="#">
                <span class="cf-icon cf-icon-twitter-square"></span>
                <span class="u-visually-hidden">Share by email</span>
            </a>
        </h1>
      notes:
        - "Use this class to hide something from view while keeping it
          accessible to screen readers."
  tags:
    - cfgov-utilities
*/

.u-visually-hidden { 
  position: absolute; 
  overflow: hidden; 
  clip: rect(0 0 0 0); 
  height: 1px; width: 1px; 
  margin: -1px; padding: 0; border: 0; 
}


/* topdoc
  name: Less mixins
  family: cfgov-utilities
  patterns:
    - codenotes:
        - .u-right();
      notes:
        - "IE7 float: right drop bug fixes:"
        - "1. If the float: right follows an element in the html structure that
          should be to its left (and not above it), then that preceding
          element(s) must be float: left.
          http://stackoverflow.com/questions/10981767/clean-css-fix-of-ie7s-float-right-drop-bug#answer-11437688"
        - "2. Simply change the markup order so that the element floating right
          comes before the element to its left."
    - codenotes:
        - .u-flexible-image();
    - codenotes:
        - .u-inline-block();
      notes:
        - "Also adds a .lt-ie8 class to hack inline-block for IE 7 and below."
  tags:
    - cfgov-utilities
*/

.u-right() {
    float: right;
}

.u-inline-block() {
    display: inline-block;
    .lt-ie8 & {
        // Hack inline-block into submission
        display: inline;
    }
}


/* topdoc
  name: Link mixins
  family: cfgov-utilities
  patterns:
    - codenotes:
        - .u-link__colors();
      notes:
        - "Pass this mixin no arguments to color your link states with the
          following defaults: :link (default state) pacific, :hover pacific-50,
          :focus: pacific, :visited teal, :active navy."
    - codenotes:
        - .u-link__colors(@c);
      notes:
        - "Pass this mixin one color to be used on all of the following
          states of your link; :link (default state), :visited, :hover, :focus,
          :active."
    - codenotes:
        - .u-link__colors(@c, @h);
      notes:
        - "Pass this mixin two colors to use the first color for the :link,
          :visited, and :active states, and the second color for the :hover and
          :focus states."
    - codenotes:
        - .u-link__colors(@c, @v, @h, @f, @a);
      notes:
        - "Pass this mixin five colors in 'love/hate' mnemonic order to color
          :link, :visited, :hover, :focus, and :active states respectively."
        - "Even though this mixin is basically the same as
          .u-link__colors-base(@c, @v, @h, @f, @a); we encourage you to use
          .u-link__colors(@c, @v, @h, @f, @a) to promote consistency."
    - codenotes:
        - .u-link__colors(@c, @v, @h, @f, @a, @bc, @bv, @bh, @bf, @ba);
      notes:
        - "Allows you to color text and the bottom border separately."
        - "The first five colors in 'love/hate' mnemonic order will color text
          for the :link, :visited, :hover, :focus, and :active states
          respectively. The last five colors in 'love/hate' mnemonic order will
          color the bottom border for the :link, :visited, :hover, :focus, and
          :active states respectively."
        - "Even though this mixin is basically the same as
          .u-link__colors-base(@c, @v, @h, @f, @a, @bc, @bv, @bh, @bf, @ba); we
          encourage you to use .u-link__colors(@c, @v, @h, @f, @a, @bc, @bv, @bh, @bf, @ba)
          to promote consistency."
    - codenotes:
        - .u-link__colors-base(@c, @v, @h, @f, @a);
      notes:
        - "This is the base mixin that all .u-link__colors() mixins use. Please
          refrain from using this mixin directly in order to promote a
          consistent use of mixin names for coloring links throughout this
          project. Remember that if you need to set colors for all states of a
          link you should use .u-link__colors(@c, @v, @h, @f, @a)."
    - codenotes:
        - .u-link__border();
      notes:
        - "Forces the default bottom border on the :link and :hover states."
    - codenotes:
        - .u-link__no-border();
      notes:
        - "Turn off the default bottom border on the :link and :hover states."
    - codenotes:
        - .u-link__hover-border();
      notes:
        - "Turn off the default bottom border on the :link state and force a
          bottom border on the :hover state."
    - codenotes:
        - .u-link-child__hover();
      notes:
        - "When a link has child elements you may want only certain children to
          change color when the parent link is hovered.
          Pass no arguments to this mixin to color the child element pacific
          when the parent link is hovered."
    - codenotes:
        - .u-link-child__hover(@c);
      notes:
        - "Pass this mixin one color to color the child element when the parent
          link is hovered."
  tags:
    - cfgov-utilities
*/

.u-link__colors() {
    .u-link__colors-base();
}

.u-link__colors(@c) {
    .u-link__colors-base(@c, @c, @c, @c, @c);
}

.u-link__colors(@c, @h) {
    .u-link__colors-base(@c, @c, @h, @h, @c);
}

.u-link__colors(@c, @v, @h, @f, @a) {
    .u-link__colors-base(@c, @v, @h, @f, @a);
}

.u-link__colors(@c, @v, @h, @f, @a,
                @bc, @bv, @bh, @bf, @ba) {
    .u-link__colors-base(@c, @v, @h, @f, @a,
                         @bc, @bv, @bh, @bf, @ba);
}

.u-link__colors-base(@c:@pacific, @v:@teal, @h:@pacific-50, @f:@pacific, @a:@navy,
                     @bc:@pacific, @bv:@teal, @bh:@pacific-50, @bf:@pacific, @ba:@navy) {
    color: @c;
    border-bottom-color: @bc;

    &:visited,
    &.visited {
        border-bottom-color: @bv;
        color: @v;
    }

    &:hover,
    &.hover {
        border-bottom-color: @bh;
        color: @h;
    }

    &:focus,
    &.focus {
        border-bottom-color: @bf;
        color: @f;
    }

    &:active,
    &.active {
        border-bottom-color: @ba;
        color: @a;
    }
}

.u-link-child__hover(@c: @pacific-50) {
    a:hover &,
    a.hover &,
    a:focus &,
    a.focus & {
        color: @c;
    }
}

.u-link__border() {
    border-bottom-width: 1px;

    &:hover,
    &.hover {
        border-bottom-width: 1px;
    }
}

.u-link__no-border() {
    border-bottom-width: 0 !important;
}

.u-link__hover-border() {
    border-bottom-width: 0 !important;

    &:hover,
    &.hover,
    &:focus,
    &.focus {
        border-bottom-width: 1px !important;
    }
}


/* topdoc
    name: EOF
    eof: true
*/
