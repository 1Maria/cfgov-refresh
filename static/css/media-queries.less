/* ==========================================================================
   cfgov-refresh
   media-queries
   ========================================================================== */


/* topdoc
  name: Media query mixins
  family: cfgov-media-queries
  patterns:
    - name: "min-width/max-width media queries"
      codenotes:
        - ".u-respond-to-min(@bp, @rules)"
        - ".u-respond-to-max(@bp, @rules)"
      notes:
        - "@bp: the breakpoint size in pixels. It will get converted into em's."
        - "@rules: a CSS or Less ruleset. Note that it can contain the full set
          of Less features."
    - name: "min-width/max-width media query usage"
      codenotes:
        - |
            .u-respond-to-min(768px, {
                .title {
                    font-size: 2em;
                }
            });

            Compiles to:

            @media only all and (min-width: 48em) {
                .title {
                    font-size: 2em;
                }
            }
    - name: "min-width/max-width media query range"
      codenotes:
        - ".u-respond-to-range(@bp1, @bp2, @rules)"
      notes:
        - "@bp1: the min-width breakpoint size in pixels.
          It will get converted into em's."
        - "@bp2: the max-width breakpoint size in pixels.
          It will get converted into em's."
        - "@rules: a CSS or Less ruleset. Note that it can contain the full set
          of Less features."
    - name: "min-width/max-width media query range usage"
      codenotes:
        - |
            .u-respond-to-range(320px, 768px, {
                .title {
                    font-size: 2em;
                }
            });

            Compiles to:

            @media only all and (min-width: 20em) and (max-width: 48em) {
                .title {
                    font-size: 2em;
                }
            }
  tags:
    - cfgov-media-queries
*/

.u-respond-to-min(@bp, @rules) {
    @ems: unit((@bp / @base-font-size-px), em);
    @media only all and (min-width: @ems) {
        @rules();
    }
}

.u-respond-to-max(@bp, @rules) {
    @ems: unit((@bp / @base-font-size-px), em);
    @media only all and (max-width: @ems) {
        @rules();
    }
}

.u-respond-to-range(@bp1, @bp2, @rules) {
    @ems1: unit((@bp1 / @base-font-size-px), em);
    @ems2: unit((@bp2 / @base-font-size-px), em);
    @media only all and (min-width: @ems1) and (max-width: @ems2) {
        @rules();
    }
}


/* topdoc
  name: EOF
  eof: true
*/
