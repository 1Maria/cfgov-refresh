/* ==========================================================================
   cfgov-refresh
   capital framework enhancements
   ========================================================================== */

/* topdoc
  name: Simple base style modifiers
  family: cfgov-cf-enhancements
  patterns:
    - name: figure.figure__bordered
      markup: |
        <figure class="figure__bordered">
            <img src="http://placekitten.com/300/300">
        </figure>
  tags:
    - cfgov-cf-enhancements
*/

.figure__bordered img {
    border: 1px solid @gray-50;
}


/* topdoc
  name: Expandables
  family: cfgov-cf-enhancements
  patterns:
    - name: Header right float on medium modifier
      codenotes:
        - .expandable_header-right__float-on-medium
  tags:
    - cfgov-cf-enhancements
*/

.expandable_target__btn__secondary {
    .btn();
    .btn__secondary();
}

.expandable_header-right__float-on-medium {
    float: none;

    .respond-to-min(600px, {
        float: right;
    });
}


/* topdoc
  name: cf-grid column dividers
  family: cfgov-cf-enhancements
  notes:
    - "cf-grid columns use left and right borders for fixed margins which means
       it's not possible to set visual left and right borders directly on them.
       Instead we can use the :before pseudo element and position it absolutely.
       The added benefit of doing it this way is that the border spans the
       entire height of the next parent using `position: relative;`. This means
       that the border will always match the height of the tallest column in the
       row."
  patterns:
    - name: Classes
      codenotes:
        - .grid_column__top-divider
        - .grid_column__left-divider
    - name: Usage
      codenotes:
        - |
          .my-column-1-2 {

              // Creates a column that spans 6 out of 12 columns.
              .grid_column(6, 12);

              // Add a top divider only at screen 599px and smaller.
              .respond-to-max(599px {
                  .grid_column__top-divider();
              });

              // Add a left divider only at screen 600px and larger.
              .respond-to-min(600px, {
                  .grid_column__left-divider();
              });

          }
  tags:
    - cfgov-cf-enhancements
*/

.grid_column__top-divider {
    &:before {
        content: "";
        display: block;
        height: 1px;
        margin-bottom: unit(@grid_gutter-width / @base-font-size-px, em);
        background-color: @gray-50;
    }
}

.grid_column__left-divider {
    padding-left: @grid_gutter-width;

    &:before {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        width: 1px;
        display: block;
        background-color: @gray-50;
        margin-left: -(@grid_gutter-width * 1.5);
    }
}

/* topdoc
  name: Width-specific display
  family: cfgov-cf-enhancements
  patterns:
    - name: Show on mobile (below 600px)
      markup: |
        <section>
            <p>The the text in the box below is visible only at widths less than 600px</p>
            <div style="border: 1px solid black; height: 22px; padding: 5px;">
                <p class="u-show-on-mobile">Visible on mobile</p>
            </div>
        </section>
      codenotes:
        - ".u-show-on-mobile"
      notes:
        - "Displays an element only at widths less than 600px."
        - "Uses display: block to show the element on mobile. Would need to 
           be extended for other display types."
    - name: Hide on mobile (below 600px)
      markup: |
        <section>
            <p>The text in the box below is hidden at widths less than 600px</p>
            <div style="border: 1px solid black; height: 22px; padding: 5px;">
                <p class="u-hide-on-mobile">Hidden on mobile</p>
            </div>
        </section>
      codenotes:
        - ".u-hide-on-mobile"
      notes:
        - "Hides an element at widths of less than 600px"
  tags:
    - cfgov-cf-enhancements
*/

.u-hide-on-mobile {
    .respond-to-max(599px {
        display: none;
    });
}

.u-show-on-mobile {
    display: none;
    .respond-to-max(599px {
        display: block;
    });
}

/* topdoc
  name: Margin overrides
  family: cfgov-cf-enhancements
  patterns:
    - name: Margin-bottom 0
      markup: |
        <section>
            <h1>H1 with default bottom margin</h1>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
        </section>
        <section>
            <h1 class="u-mb0">H1 with class u-mb0 applied</h1>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
        </section>
      codenotes:
        - ".u-mb0"
      notes:
        - "Sets any element's margin-bottom value to 0."
  tags:
    - cfgov-cf-enhancements
*/
.u-mb0 {
    margin-bottom: 0px !important;
}

/* topdoc
  name: Branded list modifier
  family: cfgov-cf-enhancements
  patterns:
    - name: Branded list
      markup: |
        <ul class="list__branded">
            <li>First item</li>
            <li>Second item</li>
            <li>Third item</li>
        </ul>
      codenotes:
        - ".list__branded"
      notes:
        - "List that uses CFPB font and brand-color bullets"
  tags:
    - cfgov-cf-enhancements
*/

.list__branded {
    .webfont-regular();
    
    li {
        position: relative;
        list-style-type: none;
        padding-bottom: 12px;
        
        &:before {
            content: "\25AA";
            position: absolute;
            left: -19px;
            color: @green;
            font-size: unit(22px / @base-font-size-px, em);
            line-height: 1;
        }
    }
    
}


/* topdoc
    name: EOF
    eof: true
*/
